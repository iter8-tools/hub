name: integration tests

on:
  pull_request:
  workflow_dispatch:
  
jobs:
  local-http-tests:
    name: local http tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.9.3/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run httpbin
      run: |
        set -e
        docker pull kennethreitz/httpbin
        docker run -p 80:80 kennethreitz/httpbin &
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://127.0.0.1/get)" != "200" ]]; do
          sleep 5; 
        done;

    - name: fix dependency
      if: github.event_name == 'pull_request'
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.dependencies[0].repository = "file://../iter8lib"' 'charts/load-test-http/Chart.yaml'

    - name: update dependency
      if: github.event_name == 'pull_request'
      run: |
        set -e
        cd charts/load-test-http
        helm dependency update .

    - name: GET benchmark
      run: |
        set -e
        cd charts/load-test-http
        iter8 gen --sourceDir . --set url=http://127.0.0.1/get
        cat experiment.yaml
        iter8 run
        iter8 assert -c completed -c nofailure -c slos

    - name: GET benchmark with SLO validation
      run: |
        set -e
        cd charts/load-test-http
        iter8 gen --sourceDir . --set url=http://127.0.0.1/get \
                  --set SLOs.http/latency-p25=80 \
                  --set SLOs.http/latency-p50=100 \
                  --set SLOs.http/latency-'p95\.0'=200
        cat experiment.yaml
        iter8 run
        iter8 assert -c completed -c nofailure -c slos

    - name: POST with payload; benchmark with SLO validation
      run: |
        set -e
        cd charts/load-test-http
        iter8 gen --sourceDir . --set url=http://127.0.0.1/post \
                  --set payloadURL=https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg \
                  --set contentType="image/jpeg" \
                  --set SLOs.http/latency-p25=80 \
                  --set SLOs.http/latency-p50=100 \
                  --set SLOs.http/latency-'p95\.0'=200
        cat experiment.yaml
        iter8 run
        iter8 assert -c completed -c nofailure -c slos

  local-grpc-tests:
    name: local grpc tests
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Install Iter8
      run: |
        wget https://github.com/iter8-tools/iter8/releases/download/v0.9.3/iter8-linux-amd64.tar.gz
        tar -xvf iter8-linux-amd64.tar.gz
        mv linux-amd64/iter8 /usr/local/bin

    - name: run greeter
      run: |
        git clone -b v1.43.0 https://github.com/grpc/grpc-go
        cd grpc-go/examples/helloworld
        go build greeter_server/main.go
        ./main &

    - name: fix dependency
      uses: mikefarah/yq@master
      if: github.event_name == 'pull_request'
      with:
        cmd: yq -i '.dependencies[0].repository = "file://../iter8lib"' 'charts/load-test-grpc/Chart.yaml'

    - name: update dependency
      if: github.event_name == 'pull_request'
      run: |
        set -e
        cd charts/load-test-grpc
        helm dependency update .

    - name: unary benchmark with SLO validation
      run: |
        set -e
        cd charts/load-test-grpc
        export LOG_LEVEL=trace
        iter8 gen --sourceDir . --set host="127.0.0.1:50051" \
                  --set call="helloworld.Greeter.SayHello" \
                  --set protoURL="https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto" \
                  --set data.name="frodo" \
                  --set SLOs.grpc/error-rate=0 \
                  --set SLOs.grpc/latency/mean=50 \
                  --set SLOs.grpc/latency/p90=100 \
                  --set SLOs.grpc/latency/p'97\.5'=200
        echo "experiment ... "
        cat experiment.yaml
        iter8 run
        echo "report ..."
        iter8 report
        echo "assert... "
        iter8 assert -c completed -c nofailure -c slos
